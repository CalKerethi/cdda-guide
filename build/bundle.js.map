{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/svelte/store/index.mjs","../../src/data.ts","../../src/types/Monster.svelte","../../src/types/Recipe.svelte","../../src/types/Item.svelte","../../src/types/Unknown.svelte","../../src/Object.svelte","../../node_modules/fuse.js/dist/fuse.esm.js","../../src/SearchResults.svelte","../../src/App.svelte","../../src/main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot_spread(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_spread_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_spread_changes_fn(dirty) | get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.34.0' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to seperate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_custom_elements_slots, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, update_slot_spread, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { readable } from 'svelte/store';\nconst idlessTypes = new Set([\n    \"MONSTER_BLACKLIST\",\n    \"MONSTER_FACTION\",\n    \"charge_removal_blacklist\",\n    \"dream\",\n    \"hit_range\",\n    \"mapgen\",\n    \"monstergroup\",\n    \"obsolete_terrain\",\n    \"overlay_order\",\n    \"overmap_land_use_code\",\n    \"overmap_terrain\",\n    \"profession_item_substitutions\",\n    \"recipe\",\n    \"rotatable_symbol\",\n    \"snippet\",\n    \"speech\",\n    \"uncraft\"\n]);\nconst typeMappings = new Map([\n    [\"AMMO\", \"item\"],\n    [\"GUN\", \"item\"],\n    [\"ARMOR\", \"item\"],\n    [\"PET_ARMOR\", \"item\"],\n    [\"TOOL\", \"item\"],\n    [\"TOOLMOD\", \"item\"],\n    [\"TOOL_ARMOR\", \"item\"],\n    [\"BOOK\", \"item\"],\n    [\"COMESTIBLE\", \"item\"],\n    [\"ENGINE\", \"item\"],\n    [\"WHEEL\", \"item\"],\n    [\"GUNMOD\", \"item\"],\n    [\"MAGAZINE\", \"item\"],\n    [\"BATTERY\", \"item\"],\n    [\"GENERIC\", \"item\"],\n    [\"BIONIC_ITEM\", \"item\"],\n    [\"MONSTER\", \"monster\"],\n]);\nexport const mapType = (type) => { var _a; return (_a = typeMappings.get(type)) !== null && _a !== void 0 ? _a : type; };\nexport const singularName = (obj) => {\n    var _a, _b;\n    return (obj === null || obj === void 0 ? void 0 : obj.name)\n        ? typeof obj.name === 'string'\n            ? obj.name\n            : (_a = obj.name.str_sp) !== null && _a !== void 0 ? _a : obj.name.str\n        : /* fallback to id? */ (_b = obj === null || obj === void 0 ? void 0 : obj.id) !== null && _b !== void 0 ? _b : obj === null || obj === void 0 ? void 0 : obj.abstract;\n};\nexport const pluralName = (obj) => {\n    var _a, _b, _c;\n    return (obj === null || obj === void 0 ? void 0 : obj.name)\n        ? typeof obj.name === 'string'\n            ? obj.name\n            : (_b = (_a = obj.name.str_sp) !== null && _a !== void 0 ? _a : obj.name.str_pl) !== null && _b !== void 0 ? _b : obj.name.str + 's'\n        : /* fallback to id? */ (_c = obj === null || obj === void 0 ? void 0 : obj.id) !== null && _c !== void 0 ? _c : obj === null || obj === void 0 ? void 0 : obj.abstract;\n};\nclass CddaData {\n    constructor(raw) {\n        this._byType = new Map;\n        this._byTypeById = new Map;\n        this._abstractsByType = new Map;\n        this._toolReplacements = new Map;\n        this._craftingPseudoItems = new Map;\n        this._raw = raw;\n        for (const obj of raw) {\n            if (!Object.hasOwnProperty.call(obj, 'type'))\n                continue;\n            const mappedType = mapType(obj.type);\n            if (!this._byType.has(mappedType))\n                this._byType.set(mappedType, []);\n            this._byType.get(mappedType).push(obj);\n            if (Object.hasOwnProperty.call(obj, 'id')) {\n                if (!this._byTypeById.has(mappedType))\n                    this._byTypeById.set(mappedType, new Map);\n                this._byTypeById.get(mappedType).set(obj.id, obj);\n            }\n            if (Object.hasOwnProperty.call(obj, 'abstract')) {\n                if (!this._abstractsByType.has(mappedType))\n                    this._abstractsByType.set(mappedType, new Map);\n                this._abstractsByType.get(mappedType).set(obj.abstract, obj);\n            }\n            if (obj.type === 'TOOL' && Object.hasOwnProperty.call(obj, 'sub')) {\n                if (!this._toolReplacements.has(obj.sub))\n                    this._toolReplacements.set(obj.sub, []);\n                this._toolReplacements.get(obj.sub).push(obj.id);\n            }\n            if (Object.hasOwnProperty.call(obj, 'crafting_pseudo_item')) {\n                this._craftingPseudoItems.set(obj.crafting_pseudo_item, obj.id);\n            }\n        }\n    }\n    byId(type, id) {\n        var _a;\n        if (!id)\n            throw new Error('fix');\n        const obj = (_a = this._byTypeById.get(type)) === null || _a === void 0 ? void 0 : _a.get(id);\n        if (obj)\n            return this._flatten(obj);\n    }\n    byType(type) {\n        // TODO: flatten...?\n        return this._byType.get(type);\n    }\n    replacementTools(type) {\n        var _a;\n        return (_a = this._toolReplacements.get(type)) !== null && _a !== void 0 ? _a : [];\n    }\n    craftingPseudoItem(id) {\n        return this._craftingPseudoItems.get(id);\n    }\n    all() {\n        return this._raw;\n    }\n    _flatten(obj) {\n        var _a, _b, _c, _d, _e, _f;\n        const parent = 'copy-from' in obj\n            ? (_b = (_a = this._byTypeById.get(mapType(obj.type))) === null || _a === void 0 ? void 0 : _a.get(obj['copy-from'])) !== null && _b !== void 0 ? _b : (_c = this._abstractsByType.get(mapType(obj.type))) === null || _c === void 0 ? void 0 : _c.get(obj['copy-from']) : null;\n        if ('copy-from' in obj && !parent)\n            console.error(`Missing parent in ${(_d = obj.id) !== null && _d !== void 0 ? _d : obj.abstract}`);\n        if (!parent)\n            return obj;\n        const ret = Object.assign(Object.assign({}, this._flatten(parent)), obj);\n        for (const k of Object.keys((_e = ret.relative) !== null && _e !== void 0 ? _e : {})) {\n            if (typeof ret.relative[k] === 'number') {\n                ret[k] += ret.relative[k];\n            }\n            // TODO: damage, vitamins, mass, volume, time\n        }\n        delete ret.relative;\n        for (const k of Object.keys((_f = ret.proportional) !== null && _f !== void 0 ? _f : {})) {\n            if (typeof ret.proportional[k] === 'number') {\n                if (k === 'attack_cost' && !(k in ret))\n                    ret[k] = 100;\n                ret[k] *= ret.proportional[k];\n                ret[k] = ret[k] | 0; // most things are ints.. TODO: what keys are float?\n            }\n            // TODO: damage, mass, volume, time (need to check the base value's type)\n        }\n        delete ret.proportional;\n        return ret;\n    }\n}\nconst fetchJson = async () => {\n    const res = await fetch(`https://raw.githubusercontent.com/nornagon/cdda-data/main/data/latest/all.json`);\n    if (!res.ok)\n        throw new Error(`Error ${res.status} (${res.statusText}) fetching data`);\n    const json = await res.json();\n    return new CddaData(json.data);\n};\nconst json = (() => {\n    let promise;\n    return () => {\n        if (!promise)\n            promise = fetchJson();\n        return promise;\n    };\n})();\nexport const data = readable(null, function (set) {\n    json().then(set);\n});\n","<script lang=\"ts\">\n  import { singularName, data } from '../data'\n  export let item\n  \n  function difficulty(item: any) {\n    const {\n      melee_skill = 0,\n      melee_dice = 0,\n      melee_cut: bonus_cut = 0,\n      melee_dice_sides: melee_sides = 0,\n      dodge: sk_dodge = 0,\n      armor_bash = -1,\n      armor_cut = -1,\n      diff: difficulty_base = 0,\n      special_attacks = [],\n      emit_fields = [],\n      hp,\n      speed,\n      attack_cost = 100,\n      morale = 0,\n      aggression: agro = 0,\n      vision_day = 40,\n      vision_night = 1\n    } = item\n    let difficulty = ( melee_skill + 1 ) * melee_dice * ( bonus_cut + melee_sides ) * 0.04 +\n                 ( sk_dodge + 1 ) * ( 3 + armor_bash + armor_cut ) * 0.04 +\n                 ( difficulty_base + special_attacks.length + 8 * emit_fields.length );\n    difficulty = Math.floor(difficulty);\n    difficulty *= ( hp + speed - attack_cost + ( morale + agro ) * 0.1 ) * 0.01 +\n                  ( vision_day + 2 * vision_night ) * 0.01;\n    return Math.floor(difficulty);\n  }\n  \n  function difficultyDescription(diff: number) {\n    if (diff < 3) {\n      return \"Minimal threat.\";\n    } else if( diff < 10 ) {\n      return \"Mildly dangerous.\";\n    } else if( diff < 20 ) {\n      return \"Dangerous.\";\n    } else if( diff < 30 ) {\n      return \"Very dangerous.\";\n    } else if( diff < 50 ) {\n      return \"Extremely dangerous.\";\n    }\n    return \"Fatally dangerous!\";\n  }\n  \n  function difficultyColor(diff: number) {\n    if (diff < 3) {\n      return \"light_gray\";\n    } else if( diff < 10 ) {\n      return \"light_gray\";\n    } else if( diff < 20 ) {\n      return \"light_red\";\n    } else if( diff < 30 ) {\n      return \"red\";\n    } else if( diff < 50 ) {\n      return \"red\";\n    }\n    return \"red\";\n  }\n  \n  function damage(item: any) {\n    let { melee_dice = 0, melee_dice_sides = 0, melee_damage, melee_cut } = item\n    //melee_damage = melee_damage ?? [ { damage_type: \"bash\", amount: `${melee_dice}d${melee_dice_sides}` } ]\n    return `${melee_dice}d${melee_dice_sides}`\n  }\n  \n  // From mtype.h. See also http://cddawiki.chezzo.com/cdda_wiki/index.php?title=Template:Enemyflags&action=edit.\n  const mon_flag_descriptions = {\n    SEES: \"It can see you (and will run/follow)\",\n    HEARS: \"It can hear you\",\n    GOODHEARING: \"Pursues sounds more than most monsters\",\n    SMELLS: \"It can smell you\",\n    KEENNOSE: \"Keen sense of smell\",\n    STUMBLES: \"Stumbles in its movement\",\n    WARM: \"Warm blooded\",\n    NOHEAD: \"Headshots not allowed!\",\n    HARDTOSHOOT: \"It's one size smaller for ranged attacks, no less then creature_size::tiny\",\n    GRABS: \"Its attacks may grab us!\",\n    BASHES: \"Bashes down doors\",\n    DESTROYS: \"Bashes down walls and more\",\n    BORES: \"Tunnels through just about anything\",\n    POISON: \"Poisonous to eat\",\n    VENOM: \"Attack may poison the player\",\n    BADVENOM: \"Attack may SEVERELY poison the player\",\n    PARALYZE: \"Attack may paralyze the player with venom\",\n    WEBWALK: \"Doesn't destroy webs\",\n    DIGS: \"Digs through the ground\",\n    CAN_DIG: \"Can dig and walk\",\n    FLIES: \"Can fly (over water, etc)\",\n    AQUATIC: \"Confined to water\",\n    SWIMS: \"Treats water as 50 movement point terrain\",\n    ATTACKMON: \"Attacks other monsters\",\n    ANIMAL: \"Is an \\\"animal\\\" for purposes of the Animal Empath trait\",\n    PLASTIC: \"Absorbs physical damage to a great degree\",\n    SUNDEATH: \"Dies in full sunlight\",\n    ELECTRIC: \"Shocks unarmed attackers\",\n    ACIDPROOF: \"Immune to acid\",\n    ACIDTRAIL: \"Leaves a trail of acid\",\n    SHORTACIDTRAIL: \"Leaves an intermittent trail of acid\",\n    FIREPROOF: \"Immune to fire\",\n    SLUDGEPROOF: \"Ignores the effect of sludge trails\",\n    SLUDGETRAIL: \"Causes monster to leave a sludge trap trail when moving\",\n    COLDPROOF: \"Immune to cold damage\",\n    FIREY: \"Burns stuff and is immune to fire\",\n    QUEEN: \"When it dies, local populations start to die off too\",\n    ELECTRONIC: \"e.g. a robot; affected by EMP blasts, and other stuff\",\n    FUR: \"May produce fur when butchered\",\n    LEATHER: \"May produce leather when butchered\",\n    WOOL: \"May produce wool when butchered\",\n    BONES: \"May produce bones and sinews when butchered; if combined with POISON flag, tainted bones, if combined with HUMAN, human bones\",\n    FAT: \"May produce fat when butchered; if combined with POISON flag, tainted fat\",\n    CONSOLE_DESPAWN: \"Despawns when a nearby console is properly hacked\",\n    IMMOBILE: \"Doesn't move (e.g. turrets)\",\n    ID_CARD_DESPAWN: \"Despawns when a science ID card is used on a nearby console\",\n    RIDEABLE_MECH: \"A rideable mech that is immobile until ridden.\",\n    MILITARY_MECH: \"A rideable mech that was designed for military work.\",\n    MECH_RECON_VISION: \"This mech gives you IR night-vision.\",\n    MECH_DEFENSIVE: \"This mech gives you thorough protection.\",\n    HIT_AND_RUN: \"Flee for several turns after a melee attack\",\n    GUILT: \"You feel guilty for killing it\",\n    PAY_BOT: \"You can pay this bot to be your friend for a time\",\n    HUMAN: \"It's a live human, as long as it's alive\",\n    NO_BREATHE: \"Creature can't drown and is unharmed by gas, smoke, or poison\",\n    FLAMMABLE: \"Monster catches fire, burns, and spreads fire to nearby objects\",\n    REVIVES: \"Monster corpse will revive after a short period of time\",\n    CHITIN: \"May produce chitin when butchered\",\n    VERMIN: \"Obsolete flag labeling \\\"nuisance\\\" or \\\"scenery\\\" monsters, now used to prevent loading the same.\",\n    NOGIB: \"Creature won't leave gibs / meat chunks when killed with huge damage.\",\n    LARVA: \"Creature is a larva. Currently used for gib and blood handling.\",\n    ARTHROPOD_BLOOD: \"Forces monster to bleed hemolymph.\",\n    ACID_BLOOD: \"Makes monster bleed acid. Fun stuff! Does not automatically dissolve in a pool of acid on death.\",\n    BILE_BLOOD: \"Makes monster bleed bile.\",\n    ABSORBS: \"Consumes objects it moves over which gives bonus hp.\",\n    ABSORBS_SPLITS: \"Consumes objects it moves over which gives bonus hp. If it gets enough bonus HP, it spawns a copy of itself.\",\n    CBM_CIV: \"May produce a common CBM a power CBM when butchered.\",\n    CBM_POWER: \"May produce a power CBM when butchered, independent of MF_CBM_wev.\",\n    CBM_SCI: \"May produce a bionic from bionics_sci when butchered.\",\n    CBM_OP: \"May produce a bionic from bionics_op when butchered, and the power storage is mk 2.\",\n    CBM_TECH: \"May produce a bionic from bionics_tech when butchered.\",\n    CBM_SUBS: \"May produce a bionic from bionics_subs when butchered.\",\n    FILTHY: \"Any clothing it drops will be filthy.\",\n    FISHABLE: \"It is fishable.\",\n    GROUP_BASH: \"Monsters that can pile up against obstacles and add their strength together to break them.\",\n    SWARMS: \"Monsters that like to group together and form loose packs\",\n    GROUP_MORALE: \"Monsters that are more courageous when near friends\",\n    INTERIOR_AMMO: \"Monster contain's its ammo inside itself, no need to load on launch. Prevents ammo from being dropped on disable.\",\n    CLIMBS: \"Monsters that can climb certain terrain and furniture\",\n    PACIFIST: \"Monsters that will never use melee attack, useful for having them use grab without attacking the player\",\n    PUSH_MON: \"Monsters that can push creatures out of their way\",\n    PUSH_VEH: \"Monsters that can push vehicles out of their way\",\n    NIGHT_INVISIBILITY: \"Monsters that are invisible in poor light conditions\",\n    REVIVES_HEALTHY: \"When revived, this monster has full hitpoints and speed\",\n    NO_NECRO: \"This monster can't be revived by necros. It will still rise on its own.\",\n    AVOID_DANGER_1: \"This monster will path around some dangers instead of through them.\",\n    AVOID_DANGER_2: \"This monster will path around most dangers instead of through them.\",\n    AVOID_FIRE: \"This monster will path around heat-related dangers instead of through them.\",\n    AVOID_FALL: \"This monster will path around cliffs instead of off of them.\",\n    PRIORITIZE_TARGETS: \"This monster will prioritize targets depending on their danger levels\",\n    NOT_HALLU: \"Monsters that will NOT appear when player's producing hallucinations\",\n    CATFOOD: \"This monster will become friendly when fed cat food.\",\n    CATTLEFODDER: \"This monster will become friendly when fed cattle fodder.\",\n    BIRDFOOD: \"This monster will become friendly when fed bird food.\",\n    CANPLAY: \"This monster can be played with if it's a pet.\",\n    PET_MOUNTABLE: \"This monster can be mounted and ridden when tamed.\",\n    PET_HARNESSABLE: \"This monster can be harnessed when tamed.\",\n    DOGFOOD: \"This monster will become friendly when fed dog food.\",\n    MILKABLE: \"This monster is milkable.\",\n    SHEARABLE: \"This monster is shearable.\",\n    NO_BREED: \"This monster doesn't breed, even though it has breed data\",\n    PET_WONT_FOLLOW: \"This monster won't follow the player automatically when tamed.\",\n    DRIPS_NAPALM: \"This monster occasionally drips napalm on move\",\n    DRIPS_GASOLINE: \"This monster occasionally drips gasoline on move\",\n    ELECTRIC_FIELD: \"This monster is surrounded by an electrical field that ignites flammable liquids near it\",\n    LOUDMOVES: \"This monster makes move noises as if ~2 sizes louder, even if flying.\",\n    CAN_OPEN_DOORS: \"This monster can open doors.\",\n    STUN_IMMUNE: \"This monster is immune to the stun effect\",\n    DROPS_AMMO: \"This monster drops ammo. Should not be set for monsters that use pseudo ammo.\",\n    INSECTICIDEPROOF: \"This monster is immune to insecticide, even though it's made of bug flesh\",\n    RANGED_ATTACKER: \"This monster has any sort of ranged attack\",\n  }\n  \n  function specialAttackToString(special_attack: any): string {\n    if (Array.isArray(special_attack))\n      if (special_attack.length > 1)\n        return `${special_attack[0]} (cooldown: ${special_attack[1]})`\n      else\n        return special_attack[0]\n    if ('type' in special_attack)\n      if ('cooldown' in special_attack)\n        return `${special_attack.type} (cooldown: ${special_attack.cooldown})`\n      else\n        return special_attack.type\n    if ('id' in special_attack)\n      if ('damage_max_instance' in special_attack)\n        return `${special_attack.id}: ${special_attack.damage_max_instance.map(inst => {\n          return `(${inst.damage_type} for ${inst.amount} damage)`\n        }).join(' ')}`\n      else\n        return special_attack.id\n  }\n\n  let materials = (item.material ?? []).map(id => $data.byId('material', id));\n</script>\n\n<h1><span style=\"font-family: monospace;\" class=\"c_{item.color}\">{item.symbol}</span> {singularName(item)}</h1>\n<section>\n  <p>{item.description}</p>\n  <p>Difficulty: {difficulty(item)} <span class='c_{difficultyColor(difficulty(item))} fg_only'>({difficultyDescription(difficulty(item))})</span></p>\n</section>\n<section>\n  <h1>Body</h1>\n  <dl>\n    <dt>Body type</dt><dd>{item.bodytype}</dd>\n    <dt>Species</dt><dd>{(item.species ?? []).join(', ')}</dd>\n    <dt>Volume</dt><dd>{item.volume}</dd>\n    <dt>Weight</dt><dd>{item.weight}</dd>\n    <dt>Material</dt>\n    <dd>\n      <ul class=\"comma-separated\">{#each materials as m}<li><a href=\"#/material/{m.id}\">{m.name}</a></li>{/each}</ul>\n    </dd>\n  </dl>\n</section>\n<section>\n  <h1>Combat</h1>\n  <div style=\"display: flex; flex-direction: row; align-items: start\">\n  <dl style=\"flex: 1\">\n    <dt>Speed</dt><dd>{item.speed}</dd>\n    <dt>Melee skill</dt><dd>{item.melee_skill ?? 0}</dd>\n    <dt>Damage</dt><dd>{damage(item)}</dd>\n    {#if item.special_attacks}\n    <dt>Special attacks:</dt><dd>\n      <ul class=\"no-bullets\">\n      {#each item.special_attacks as special_attack, i}\n        <li>{specialAttackToString(special_attack)}</li>\n      {/each}\n      </ul>\n    </dd>\n    {/if}\n  </dl>\n  <dl style=\"flex: 1\">\n    <dt>HP</dt><dd>{item.hp}</dd>\n    <dt>Dodge</dt><dd>{item.dodge ?? 0}</dd>\n    <dt>Armor</dt>\n    <dd>\n      <dl>\n        <dt>Bash</dt><dd>{item.armor_bash ?? 0}</dd>\n        <dt>Cut</dt><dd>{item.armor_cut ?? 0}</dd>\n        <dt>Stab</dt><dd>{item.armor_stab ?? Math.floor((item.armor_cut ?? 0) * 0.8)}</dd>\n        <dt>Bullet</dt><dd>{item.armor_bullet ?? 0}</dd>\n        <dt>Acid</dt><dd>{item.armor_acid ?? Math.floor((item.armor_cut ?? 0) * 0.5)}</dd>\n        <dt>Fire</dt><dd>{item.armor_fire ?? 0}</dd>\n      </dl>\n    </dd>\n  </dl>\n  </div>\n</section>\n<section>\n  <h1>Behavior</h1>\n  <dl>\n    <dt>Aggression</dt><dd>{item.aggression}</dd>\n    <dt>Morale</dt><dd>{item.morale}</dd>\n    <dt>Default faction</dt><dd>{item.default_faction}</dd>\n    {#if item.anger_triggers}\n    <dt>Anger triggers</dt><dd>{item.anger_triggers.join(', ')}</dd>\n    {/if}\n    {#if item.placate_triggers}\n    <dt>Placate triggers</dt><dd>{item.placate_triggers.join(', ')}</dd>\n    {/if}\n    <dt>Flags</dt><dd>{#each item.flags ?? [] as flag, i}<abbr title={mon_flag_descriptions[flag]}>{flag}</abbr>{#if i < item.flags.length - 1}, {/if}{/each}</dd>\n    <dt>On death</dt><dd>{(item.death_function ?? []).join(', ')}</dd>\n  </dl>\n</section>","<script lang=\"ts\">\n  import { data, singularName, pluralName } from '../data'\n\n  export let recipe: any\n  \n  type OneRequirement = [string, number] | [string, number, \"LIST\"]\n  type RequirementChoices = OneRequirement[]\n  type Requirement = RequirementChoices[]\n  \n  function flattenChoices(choices: RequirementChoices, get: (x: any) => Requirement): {id: string, count: number}[] {\n    const flatChoices = []\n    for (const choice of choices) {\n      const [id, count, isList] = choice\n      if (isList) {\n        const otherRequirement = $data.byId('requirement', id)\n        if (otherRequirement.type !== 'requirement') {\n          console.error(`Expected a requirement, got ${otherRequirement.type} (id=${otherRequirement.id})`)\n        }\n        const otherRequirementTools = get(otherRequirement) ?? []\n        const otherRequirementChoices = otherRequirementTools[0] // only take the first\n        flatChoices.push(...flattenChoices(otherRequirementChoices, get).map(x => ({...x, count: x.count * count})))\n      } else {\n        flatChoices.push({id, count})\n      }\n    }\n    return flatChoices\n  }\n  \n  function expandSubstitutes(r: {id: string, count: number}): {id: string, count: number}[] {\n    const replacements = $data.replacementTools(r.id)\n    return [r, ...replacements.map(o => ({id: o, count: r.count}))]\n  }\n  \n  function flattenRequirement(required: Requirement, get: (x: any) => Requirement) {\n    return required.map(x => flattenChoices(x, get)).map(x => x.flatMap(expandSubstitutes)).filter(x => x.length)\n  }\n  \n  let result = $data.byId('item', recipe.result)\n  \n  let requirements = ((recipe.using ?? [])\n    .map(([id, count]) => [$data.byId('requirement', id), count])).concat([[recipe, 1]])\n  \n  let tools = requirements.flatMap(([req, count]) => {\n    return flattenRequirement(req.tools ?? [], x => x.tools).map(x => x.map(x => ({...x, count: x.count * count})))\n  })\n  let components = requirements.flatMap(([req, count]) => {\n    return flattenRequirement(req.components ?? [], x => x.components).map(x => x.map(x => ({...x, count: x.count * count})))\n  })\n  let qualities = requirements.flatMap(([req, count]) => {\n    return req.qualities ?? []\n  })\n\n  //let tools = flattenRequirement(recipe.tools ?? [], x => x.tools)\n  //let components = flattenRequirement(recipe.components ?? [], x => x.components)\n  \n  function normalizeSkillsRequired(skills_required: [string, number] | [string, number][] | undefined): [string, number][] {\n    if (skills_required === undefined) return []\n    if (Array.isArray(skills_required[0]))\n      return skills_required as [string, number][]\n    return [skills_required as [string, number]]\n  }\n  \n  let skillsRequired = normalizeSkillsRequired(recipe.skills_required)\n</script>\n\n<section class=\"recipe\">\n<dl>\n  <dt>Primary skill</dt>\n  <dd><a href=\"#/skill/{recipe.skill_used}\">{singularName($data.byId('skill', recipe.skill_used))}</a> ({recipe.difficulty ?? 0})</dd>\n  {#if skillsRequired.length}\n  <dt>Other skills</dt>\n  <dd>\n    {#each skillsRequired as [skill, level], i}\n    <a href=\"#/skill/{skill}\">{skill}</a> ({level}){#if i === skillsRequired.length - 2}{' and '}{:else if i !== skillsRequired.length - 1}{', '}{/if}\n    {:else}\n    none\n    {/each}\n  </dd>\n  {/if}\n  {#if recipe.proficiencies}\n  <dt>Proficiencies</dt>\n  <dd>\n    <ul>\n    {#each recipe.proficiencies ?? [] as prof}\n    <li><a href=\"#/proficiency/{prof.proficiency}\">{singularName($data.byId('proficiency', prof.proficiency))}</a></li>\n    {/each}\n    </ul>\n  </dd>\n  {/if}\n  <dt>Time to complete</dt>\n  <dd>{recipe.time}</dd>\n  <dt>Recipe makes</dt>\n  <dd>{recipe.charges ?? result.initial_charges ?? result.count ?? result.charges}<!-- TODO: properly switch on result type --></dd>\n  <dt>Tools required</dt>\n  <dd>\n    <ul>\n      {#each qualities ?? [] as quality}\n        <li>{quality.amount ?? 1} tool{(quality.amount ?? 1) === 1 ? '' : 's'} with <a href=\"#/tool_quality/{quality.id}\">{singularName($data.byId('tool_quality', quality.id))}</a> of {quality.level} or more.</li>\n      {/each}\n      {#each tools as toolChoices}\n      <li>\n        {#each toolChoices as tool, i}\n          {#if i !== 0}{' OR '}{/if}\n          {#if $data.craftingPseudoItem(tool.id)}\n          <a href='#/furniture/{$data.craftingPseudoItem(tool.id)}'>{singularName($data.byId('item', tool.id))}</a>\n          {:else}\n          <a href='#/item/{tool.id}'>{singularName($data.byId('item', tool.id))}</a>\n          {/if}\n          {#if tool.count > 0}({tool.count} charge{#if tool.count !== 1}s{/if}){/if}\n        {/each}\n      </li>\n      {/each}\n    </ul>\n  </dd>\n  <dt>Components</dt>\n  <dd>\n    <ul>\n      {#each components as componentChoices}\n      <li>\n        {#each componentChoices as comp, i}\n          {#if i !== 0}{' OR '}{/if}\n          {comp.count} <a href='#/item/{comp.id}'>{comp.count === 1 ? singularName($data.byId('item', comp.id)) : pluralName($data.byId('item', comp.id))}</a>\n        {/each}\n      </li>\n      {/each}\n    </ul>\n  </dd>\n</dl>\n<details>\n<summary>Recipe JSON</summary>\n<pre>{JSON.stringify(recipe, null, 2)}</pre>\n</details>\n</section>\n\n<style>\n  ul {\n    margin: 0;\n    padding-left: 1em;\n  }\n</style>","<script lang=\"ts\">\n  import { data, singularName } from '../data'\n  import Recipe from './Recipe.svelte';\n  export let item: any\n  \n  function parseVolume(string: string | number): number {\n    if (typeof string === 'undefined') return 0\n    if (typeof string === 'number')\n      return string * 250\n    if (string.endsWith('ml'))\n      return parseInt(string)\n    else if (string.endsWith('L'))\n      return parseInt(string) * 1000\n  }\n  \n  function parseMass(string: string | number): number {\n    if (typeof string === 'undefined') return 0\n    if (typeof string === 'number')\n      return string\n    if (string.endsWith('g'))\n      return parseInt(string)\n    if (string.endsWith('mg'))\n      return parseInt(string) / 1000\n    if (string.endsWith('kg'))\n      return parseInt(string) * 1000\n  }\n  \n  function length(item) {\n    if (item.longest_side) return item.longest_side\n    return `${Math.round(Math.cbrt(parseVolume(item.volume)))} cm`\n  }\n  \n  function attackTime(item) {\n    return Math.floor(65 + ( parseVolume(item.volume) / 62.5 + parseMass(item.weight) / 60 ));\n  }\n  \n  let techniques = (item.techniques ?? []).map(t => $data.byId('technique', t));\n  let qualities = (item.qualities ?? []).map(([id, level]) => ({ quality: $data.byId('tool_quality', id), level }));\n  let materials = (item.material ?? []).map(id => $data.byId('material', id));\n  let flags = (item.flags ?? []).map(id => $data.byId('json_flag', id) ?? {id});\n  let ammo = Array.isArray(item.ammo) ? item.ammo[0] : item.ammo\n  \n  let recipes = $data.byType('recipe').filter(x => x.result === item.id && !x.obsolete)\n</script>\n\n<h1><span style=\"font-family: monospace;\" class=\"c_{item.color}\">{item.symbol}</span> {singularName(item)}</h1>\n<section>\n<h1>General</h1>\n<dl>\n  <dt>Material</dt>\n  <dd>\n    <ul class=\"comma-separated\">{#each materials as m}<li><a href=\"#/material/{m.id}\">{m.name}</a></li>{/each}</ul>\n  </dd>\n  <dt>Volume</dt><dd>{item.volume}</dd>\n  <dt>Weight</dt><dd>{item.weight}</dd>\n  <dt>Length</dt><dd>{length(item)}</dd>\n  {#if ammo}\n  <dt>Ammo</dt><dd><a href=\"#/ammunition_type/{ammo}\">{singularName($data.byId('ammunition_type', ammo))}</a></dd>\n  {/if}\n  <dt>Flags</dt>\n  <dd>\n    <ul class=\"comma-separated\">{#each flags as f}<li><a href=\"#/json_flag/{f.id}\">{f.id}</a></li>{:else}<li><em>none</em></li>{/each}</ul>\n  </dd>\n\n  {#if qualities.length}\n  <dt>Qualities</dt>\n  <dd>\n  <ul class=\"no-bullets\">\n  {#each qualities as {quality, level}}\n    <li>Has level <strong>{level} <a href=\"#/tool_quality/{quality.id}\">{singularName(quality)}</a></strong> quality.</li>\n  {/each}\n  </ul>\n  </dd>\n  {/if}\n</dl>\n<p style=\"color: var(--cata-color-gray)\">{item.description}</p>\n</section>\n{#if item.bashing || item.cutting}\n<section>\n<h1>Melee</h1>\n<dl>\n  <dt>Bash</dt><dd>{item.bashing ?? 0}</dd>\n  <dt>Cut</dt><dd>{item.cutting ?? 0}</dd>\n  <dt>To hit</dt><dd>{item.to_hit ?? 0}</dd>\n  <dt>Moves per attack</dt><dd>{attackTime(item)}</dd>\n{#if techniques.length}\n  <dt>Techniques</dt><dd><ul class=\"no-bullets\">{#each techniques as technique}\n  <li><strong><a href=\"#/technique/{technique.id}\">{technique.name}</a></strong>: {technique.description}</li>\n  {/each}\n  </ul></dd>\n{/if}\n</dl>\n</section>\n{/if}\n{#if recipes.length}\n<h2>Recipes</h2>\n{#each recipes as recipe (recipe)}\n<Recipe recipe={recipe} />\n{/each}\n{/if}","<script lang=\"ts\">\n  export let item\n</script>\n\n<pre>{JSON.stringify(item, null, 2)}</pre>\n","<script lang=\"ts\">\n  import { data } from './data';\n  import Monster from './types/Monster.svelte'\n  import Item from './types/Item.svelte'\n  import Unknown from './types/Unknown.svelte'\n  export let item: { id: string, type: string }\n  \n  let obj: any;\n  $: obj = $data?.byId(item.type, item.id)\n  \n  const displays = {\n    MONSTER: Monster,\n    AMMO: Item,\n    GUN: Item,\n    ARMOR: Item,\n    PET_ARMOR: Item,\n    TOOL: Item,\n    TOOLMOD: Item,\n    TOOL_ARMOR: Item,\n    BOOK: Item,\n    COMESTIBLE: Item,\n    ENGINE: Item,\n    WHEEL: Item,\n    GUNMOD: Item,\n    MAGAZINE: Item,\n    BATTERY: Item,\n    GENERIC: Item,\n    BIONIC_ITEM: Item,\n  }\n</script>\n\n{#if !$data}\n...\n{:else}\n{#if !obj}\nUnknown obj: {item.type}/{item.id}\n{:else}\n<svelte:component this={displays[obj.type] ?? Unknown} item={obj} />\n\n<details>\n<summary>Raw JSON</summary>\n<pre>{JSON.stringify(obj, null, 2)}</pre>\n</details>\n{/if}\n{/if}","/**\n * Fuse.js v6.4.6 - Lightweight fuzzy-search (http://fusejs.io)\n *\n * Copyright (c) 2021 Kiro Risk (http://kiro.me)\n * All Rights Reserved. Apache Software License 2.0\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nfunction isArray(value) {\n  return !Array.isArray\n    ? getTag(value) === '[object Array]'\n    : Array.isArray(value)\n}\n\n// Adapted from: https://github.com/lodash/lodash/blob/master/.internal/baseToString.js\nconst INFINITY = 1 / 0;\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value\n  }\n  let result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result\n}\n\nfunction toString(value) {\n  return value == null ? '' : baseToString(value)\n}\n\nfunction isString(value) {\n  return typeof value === 'string'\n}\n\nfunction isNumber(value) {\n  return typeof value === 'number'\n}\n\n// Adapted from: https://github.com/lodash/lodash/blob/master/isBoolean.js\nfunction isBoolean(value) {\n  return (\n    value === true ||\n    value === false ||\n    (isObjectLike(value) && getTag(value) == '[object Boolean]')\n  )\n}\n\nfunction isObject(value) {\n  return typeof value === 'object'\n}\n\n// Checks if `value` is object-like.\nfunction isObjectLike(value) {\n  return isObject(value) && value !== null\n}\n\nfunction isDefined(value) {\n  return value !== undefined && value !== null\n}\n\nfunction isBlank(value) {\n  return !value.trim().length\n}\n\n// Gets the `toStringTag` of `value`.\n// Adapted from: https://github.com/lodash/lodash/blob/master/.internal/getTag.js\nfunction getTag(value) {\n  return value == null\n    ? value === undefined\n      ? '[object Undefined]'\n      : '[object Null]'\n    : Object.prototype.toString.call(value)\n}\n\nconst EXTENDED_SEARCH_UNAVAILABLE = 'Extended search is not available';\n\nconst INCORRECT_INDEX_TYPE = \"Incorrect 'index' type\";\n\nconst LOGICAL_SEARCH_INVALID_QUERY_FOR_KEY = (key) =>\n  `Invalid value for key ${key}`;\n\nconst PATTERN_LENGTH_TOO_LARGE = (max) =>\n  `Pattern length exceeds max of ${max}.`;\n\nconst MISSING_KEY_PROPERTY = (name) => `Missing ${name} property in key`;\n\nconst INVALID_KEY_WEIGHT_VALUE = (key) =>\n  `Property 'weight' in key '${key}' must be a positive integer`;\n\nconst hasOwn = Object.prototype.hasOwnProperty;\n\nclass KeyStore {\n  constructor(keys) {\n    this._keys = [];\n    this._keyMap = {};\n\n    let totalWeight = 0;\n\n    keys.forEach((key) => {\n      let obj = createKey(key);\n\n      totalWeight += obj.weight;\n\n      this._keys.push(obj);\n      this._keyMap[obj.id] = obj;\n\n      totalWeight += obj.weight;\n    });\n\n    // Normalize weights so that their sum is equal to 1\n    this._keys.forEach((key) => {\n      key.weight /= totalWeight;\n    });\n  }\n  get(keyId) {\n    return this._keyMap[keyId]\n  }\n  keys() {\n    return this._keys\n  }\n  toJSON() {\n    return JSON.stringify(this._keys)\n  }\n}\n\nfunction createKey(key) {\n  let path = null;\n  let id = null;\n  let src = null;\n  let weight = 1;\n\n  if (isString(key) || isArray(key)) {\n    src = key;\n    path = createKeyPath(key);\n    id = createKeyId(key);\n  } else {\n    if (!hasOwn.call(key, 'name')) {\n      throw new Error(MISSING_KEY_PROPERTY('name'))\n    }\n\n    const name = key.name;\n    src = name;\n\n    if (hasOwn.call(key, 'weight')) {\n      weight = key.weight;\n\n      if (weight <= 0) {\n        throw new Error(INVALID_KEY_WEIGHT_VALUE(name))\n      }\n    }\n\n    path = createKeyPath(name);\n    id = createKeyId(name);\n  }\n\n  return { path, id, weight, src }\n}\n\nfunction createKeyPath(key) {\n  return isArray(key) ? key : key.split('.')\n}\n\nfunction createKeyId(key) {\n  return isArray(key) ? key.join('.') : key\n}\n\nfunction get(obj, path) {\n  let list = [];\n  let arr = false;\n\n  const deepGet = (obj, path, index) => {\n    if (!isDefined(obj)) {\n      return\n    }\n    if (!path[index]) {\n      // If there's no path left, we've arrived at the object we care about.\n      list.push(obj);\n    } else {\n      let key = path[index];\n\n      const value = obj[key];\n\n      if (!isDefined(value)) {\n        return\n      }\n\n      // If we're at the last value in the path, and if it's a string/number/bool,\n      // add it to the list\n      if (\n        index === path.length - 1 &&\n        (isString(value) || isNumber(value) || isBoolean(value))\n      ) {\n        list.push(toString(value));\n      } else if (isArray(value)) {\n        arr = true;\n        // Search each item in the array.\n        for (let i = 0, len = value.length; i < len; i += 1) {\n          deepGet(value[i], path, index + 1);\n        }\n      } else if (path.length) {\n        // An object. Recurse further.\n        deepGet(value, path, index + 1);\n      }\n    }\n  };\n\n  // Backwards compatibility (since path used to be a string)\n  deepGet(obj, isString(path) ? path.split('.') : path, 0);\n\n  return arr ? list : list[0]\n}\n\nconst MatchOptions = {\n  // Whether the matches should be included in the result set. When `true`, each record in the result\n  // set will include the indices of the matched characters.\n  // These can consequently be used for highlighting purposes.\n  includeMatches: false,\n  // When `true`, the matching function will continue to the end of a search pattern even if\n  // a perfect match has already been located in the string.\n  findAllMatches: false,\n  // Minimum number of characters that must be matched before a result is considered a match\n  minMatchCharLength: 1\n};\n\nconst BasicOptions = {\n  // When `true`, the algorithm continues searching to the end of the input even if a perfect\n  // match is found before the end of the same input.\n  isCaseSensitive: false,\n  // When true, the matching function will continue to the end of a search pattern even if\n  includeScore: false,\n  // List of properties that will be searched. This also supports nested properties.\n  keys: [],\n  // Whether to sort the result list, by score\n  shouldSort: true,\n  // Default sort function: sort by ascending score, ascending index\n  sortFn: (a, b) =>\n    a.score === b.score ? (a.idx < b.idx ? -1 : 1) : a.score < b.score ? -1 : 1\n};\n\nconst FuzzyOptions = {\n  // Approximately where in the text is the pattern expected to be found?\n  location: 0,\n  // At what point does the match algorithm give up. A threshold of '0.0' requires a perfect match\n  // (of both letters and location), a threshold of '1.0' would match anything.\n  threshold: 0.6,\n  // Determines how close the match must be to the fuzzy location (specified above).\n  // An exact letter match which is 'distance' characters away from the fuzzy location\n  // would score as a complete mismatch. A distance of '0' requires the match be at\n  // the exact location specified, a threshold of '1000' would require a perfect match\n  // to be within 800 characters of the fuzzy location to be found using a 0.8 threshold.\n  distance: 100\n};\n\nconst AdvancedOptions = {\n  // When `true`, it enables the use of unix-like search commands\n  useExtendedSearch: false,\n  // The get function to use when fetching an object's properties.\n  // The default will search nested paths *ie foo.bar.baz*\n  getFn: get,\n  // When `true`, search will ignore `location` and `distance`, so it won't matter\n  // where in the string the pattern appears.\n  // More info: https://fusejs.io/concepts/scoring-theory.html#fuzziness-score\n  ignoreLocation: false,\n  // When `true`, the calculation for the relevance score (used for sorting) will\n  // ignore the field-length norm.\n  // More info: https://fusejs.io/concepts/scoring-theory.html#field-length-norm\n  ignoreFieldNorm: false\n};\n\nvar Config = {\n  ...BasicOptions,\n  ...MatchOptions,\n  ...FuzzyOptions,\n  ...AdvancedOptions\n};\n\nconst SPACE = /[^ ]+/g;\n\n// Field-length norm: the shorter the field, the higher the weight.\n// Set to 3 decimals to reduce index size.\nfunction norm(mantissa = 3) {\n  const cache = new Map();\n  const m = Math.pow(10, mantissa);\n\n  return {\n    get(value) {\n      const numTokens = value.match(SPACE).length;\n\n      if (cache.has(numTokens)) {\n        return cache.get(numTokens)\n      }\n\n      const norm = 1 / Math.sqrt(numTokens);\n\n      // In place of `toFixed(mantissa)`, for faster computation\n      const n = parseFloat(Math.round(norm * m) / m);\n\n      cache.set(numTokens, n);\n\n      return n\n    },\n    clear() {\n      cache.clear();\n    }\n  }\n}\n\nclass FuseIndex {\n  constructor({ getFn = Config.getFn } = {}) {\n    this.norm = norm(3);\n    this.getFn = getFn;\n    this.isCreated = false;\n\n    this.setIndexRecords();\n  }\n  setSources(docs = []) {\n    this.docs = docs;\n  }\n  setIndexRecords(records = []) {\n    this.records = records;\n  }\n  setKeys(keys = []) {\n    this.keys = keys;\n    this._keysMap = {};\n    keys.forEach((key, idx) => {\n      this._keysMap[key.id] = idx;\n    });\n  }\n  create() {\n    if (this.isCreated || !this.docs.length) {\n      return\n    }\n\n    this.isCreated = true;\n\n    // List is Array<String>\n    if (isString(this.docs[0])) {\n      this.docs.forEach((doc, docIndex) => {\n        this._addString(doc, docIndex);\n      });\n    } else {\n      // List is Array<Object>\n      this.docs.forEach((doc, docIndex) => {\n        this._addObject(doc, docIndex);\n      });\n    }\n\n    this.norm.clear();\n  }\n  // Adds a doc to the end of the index\n  add(doc) {\n    const idx = this.size();\n\n    if (isString(doc)) {\n      this._addString(doc, idx);\n    } else {\n      this._addObject(doc, idx);\n    }\n  }\n  // Removes the doc at the specified index of the index\n  removeAt(idx) {\n    this.records.splice(idx, 1);\n\n    // Change ref index of every subsquent doc\n    for (let i = idx, len = this.size(); i < len; i += 1) {\n      this.records[i].i -= 1;\n    }\n  }\n  getValueForItemAtKeyId(item, keyId) {\n    return item[this._keysMap[keyId]]\n  }\n  size() {\n    return this.records.length\n  }\n  _addString(doc, docIndex) {\n    if (!isDefined(doc) || isBlank(doc)) {\n      return\n    }\n\n    let record = {\n      v: doc,\n      i: docIndex,\n      n: this.norm.get(doc)\n    };\n\n    this.records.push(record);\n  }\n  _addObject(doc, docIndex) {\n    let record = { i: docIndex, $: {} };\n\n    // Iterate over every key (i.e, path), and fetch the value at that key\n    this.keys.forEach((key, keyIndex) => {\n      // console.log(key)\n      let value = this.getFn(doc, key.path);\n\n      if (!isDefined(value)) {\n        return\n      }\n\n      if (isArray(value)) {\n        let subRecords = [];\n        const stack = [{ nestedArrIndex: -1, value }];\n\n        while (stack.length) {\n          const { nestedArrIndex, value } = stack.pop();\n\n          if (!isDefined(value)) {\n            continue\n          }\n\n          if (isString(value) && !isBlank(value)) {\n            let subRecord = {\n              v: value,\n              i: nestedArrIndex,\n              n: this.norm.get(value)\n            };\n\n            subRecords.push(subRecord);\n          } else if (isArray(value)) {\n            value.forEach((item, k) => {\n              stack.push({\n                nestedArrIndex: k,\n                value: item\n              });\n            });\n          }\n        }\n        record.$[keyIndex] = subRecords;\n      } else if (!isBlank(value)) {\n        let subRecord = {\n          v: value,\n          n: this.norm.get(value)\n        };\n\n        record.$[keyIndex] = subRecord;\n      }\n    });\n\n    this.records.push(record);\n  }\n  toJSON() {\n    return {\n      keys: this.keys,\n      records: this.records\n    }\n  }\n}\n\nfunction createIndex(keys, docs, { getFn = Config.getFn } = {}) {\n  const myIndex = new FuseIndex({ getFn });\n  myIndex.setKeys(keys.map(createKey));\n  myIndex.setSources(docs);\n  myIndex.create();\n  return myIndex\n}\n\nfunction parseIndex(data, { getFn = Config.getFn } = {}) {\n  const { keys, records } = data;\n  const myIndex = new FuseIndex({ getFn });\n  myIndex.setKeys(keys);\n  myIndex.setIndexRecords(records);\n  return myIndex\n}\n\nfunction computeScore(\n  pattern,\n  {\n    errors = 0,\n    currentLocation = 0,\n    expectedLocation = 0,\n    distance = Config.distance,\n    ignoreLocation = Config.ignoreLocation\n  } = {}\n) {\n  const accuracy = errors / pattern.length;\n\n  if (ignoreLocation) {\n    return accuracy\n  }\n\n  const proximity = Math.abs(expectedLocation - currentLocation);\n\n  if (!distance) {\n    // Dodge divide by zero error.\n    return proximity ? 1.0 : accuracy\n  }\n\n  return accuracy + proximity / distance\n}\n\nfunction convertMaskToIndices(\n  matchmask = [],\n  minMatchCharLength = Config.minMatchCharLength\n) {\n  let indices = [];\n  let start = -1;\n  let end = -1;\n  let i = 0;\n\n  for (let len = matchmask.length; i < len; i += 1) {\n    let match = matchmask[i];\n    if (match && start === -1) {\n      start = i;\n    } else if (!match && start !== -1) {\n      end = i - 1;\n      if (end - start + 1 >= minMatchCharLength) {\n        indices.push([start, end]);\n      }\n      start = -1;\n    }\n  }\n\n  // (i-1 - start) + 1 => i - start\n  if (matchmask[i - 1] && i - start >= minMatchCharLength) {\n    indices.push([start, i - 1]);\n  }\n\n  return indices\n}\n\n// Machine word size\nconst MAX_BITS = 32;\n\nfunction search(\n  text,\n  pattern,\n  patternAlphabet,\n  {\n    location = Config.location,\n    distance = Config.distance,\n    threshold = Config.threshold,\n    findAllMatches = Config.findAllMatches,\n    minMatchCharLength = Config.minMatchCharLength,\n    includeMatches = Config.includeMatches,\n    ignoreLocation = Config.ignoreLocation\n  } = {}\n) {\n  if (pattern.length > MAX_BITS) {\n    throw new Error(PATTERN_LENGTH_TOO_LARGE(MAX_BITS))\n  }\n\n  const patternLen = pattern.length;\n  // Set starting location at beginning text and initialize the alphabet.\n  const textLen = text.length;\n  // Handle the case when location > text.length\n  const expectedLocation = Math.max(0, Math.min(location, textLen));\n  // Highest score beyond which we give up.\n  let currentThreshold = threshold;\n  // Is there a nearby exact match? (speedup)\n  let bestLocation = expectedLocation;\n\n  // Performance: only computer matches when the minMatchCharLength > 1\n  // OR if `includeMatches` is true.\n  const computeMatches = minMatchCharLength > 1 || includeMatches;\n  // A mask of the matches, used for building the indices\n  const matchMask = computeMatches ? Array(textLen) : [];\n\n  let index;\n\n  // Get all exact matches, here for speed up\n  while ((index = text.indexOf(pattern, bestLocation)) > -1) {\n    let score = computeScore(pattern, {\n      currentLocation: index,\n      expectedLocation,\n      distance,\n      ignoreLocation\n    });\n\n    currentThreshold = Math.min(score, currentThreshold);\n    bestLocation = index + patternLen;\n\n    if (computeMatches) {\n      let i = 0;\n      while (i < patternLen) {\n        matchMask[index + i] = 1;\n        i += 1;\n      }\n    }\n  }\n\n  // Reset the best location\n  bestLocation = -1;\n\n  let lastBitArr = [];\n  let finalScore = 1;\n  let binMax = patternLen + textLen;\n\n  const mask = 1 << (patternLen - 1);\n\n  for (let i = 0; i < patternLen; i += 1) {\n    // Scan for the best match; each iteration allows for one more error.\n    // Run a binary search to determine how far from the match location we can stray\n    // at this error level.\n    let binMin = 0;\n    let binMid = binMax;\n\n    while (binMin < binMid) {\n      const score = computeScore(pattern, {\n        errors: i,\n        currentLocation: expectedLocation + binMid,\n        expectedLocation,\n        distance,\n        ignoreLocation\n      });\n\n      if (score <= currentThreshold) {\n        binMin = binMid;\n      } else {\n        binMax = binMid;\n      }\n\n      binMid = Math.floor((binMax - binMin) / 2 + binMin);\n    }\n\n    // Use the result from this iteration as the maximum for the next.\n    binMax = binMid;\n\n    let start = Math.max(1, expectedLocation - binMid + 1);\n    let finish = findAllMatches\n      ? textLen\n      : Math.min(expectedLocation + binMid, textLen) + patternLen;\n\n    // Initialize the bit array\n    let bitArr = Array(finish + 2);\n\n    bitArr[finish + 1] = (1 << i) - 1;\n\n    for (let j = finish; j >= start; j -= 1) {\n      let currentLocation = j - 1;\n      let charMatch = patternAlphabet[text.charAt(currentLocation)];\n\n      if (computeMatches) {\n        // Speed up: quick bool to int conversion (i.e, `charMatch ? 1 : 0`)\n        matchMask[currentLocation] = +!!charMatch;\n      }\n\n      // First pass: exact match\n      bitArr[j] = ((bitArr[j + 1] << 1) | 1) & charMatch;\n\n      // Subsequent passes: fuzzy match\n      if (i) {\n        bitArr[j] |=\n          ((lastBitArr[j + 1] | lastBitArr[j]) << 1) | 1 | lastBitArr[j + 1];\n      }\n\n      if (bitArr[j] & mask) {\n        finalScore = computeScore(pattern, {\n          errors: i,\n          currentLocation,\n          expectedLocation,\n          distance,\n          ignoreLocation\n        });\n\n        // This match will almost certainly be better than any existing match.\n        // But check anyway.\n        if (finalScore <= currentThreshold) {\n          // Indeed it is\n          currentThreshold = finalScore;\n          bestLocation = currentLocation;\n\n          // Already passed `loc`, downhill from here on in.\n          if (bestLocation <= expectedLocation) {\n            break\n          }\n\n          // When passing `bestLocation`, don't exceed our current distance from `expectedLocation`.\n          start = Math.max(1, 2 * expectedLocation - bestLocation);\n        }\n      }\n    }\n\n    // No hope for a (better) match at greater error levels.\n    const score = computeScore(pattern, {\n      errors: i + 1,\n      currentLocation: expectedLocation,\n      expectedLocation,\n      distance,\n      ignoreLocation\n    });\n\n    if (score > currentThreshold) {\n      break\n    }\n\n    lastBitArr = bitArr;\n  }\n\n  const result = {\n    isMatch: bestLocation >= 0,\n    // Count exact matches (those with a score of 0) to be \"almost\" exact\n    score: Math.max(0.001, finalScore)\n  };\n\n  if (computeMatches) {\n    const indices = convertMaskToIndices(matchMask, minMatchCharLength);\n    if (!indices.length) {\n      result.isMatch = false;\n    } else if (includeMatches) {\n      result.indices = indices;\n    }\n  }\n\n  return result\n}\n\nfunction createPatternAlphabet(pattern) {\n  let mask = {};\n\n  for (let i = 0, len = pattern.length; i < len; i += 1) {\n    const char = pattern.charAt(i);\n    mask[char] = (mask[char] || 0) | (1 << (len - i - 1));\n  }\n\n  return mask\n}\n\nclass BitapSearch {\n  constructor(\n    pattern,\n    {\n      location = Config.location,\n      threshold = Config.threshold,\n      distance = Config.distance,\n      includeMatches = Config.includeMatches,\n      findAllMatches = Config.findAllMatches,\n      minMatchCharLength = Config.minMatchCharLength,\n      isCaseSensitive = Config.isCaseSensitive,\n      ignoreLocation = Config.ignoreLocation\n    } = {}\n  ) {\n    this.options = {\n      location,\n      threshold,\n      distance,\n      includeMatches,\n      findAllMatches,\n      minMatchCharLength,\n      isCaseSensitive,\n      ignoreLocation\n    };\n\n    this.pattern = isCaseSensitive ? pattern : pattern.toLowerCase();\n\n    this.chunks = [];\n\n    if (!this.pattern.length) {\n      return\n    }\n\n    const addChunk = (pattern, startIndex) => {\n      this.chunks.push({\n        pattern,\n        alphabet: createPatternAlphabet(pattern),\n        startIndex\n      });\n    };\n\n    const len = this.pattern.length;\n\n    if (len > MAX_BITS) {\n      let i = 0;\n      const remainder = len % MAX_BITS;\n      const end = len - remainder;\n\n      while (i < end) {\n        addChunk(this.pattern.substr(i, MAX_BITS), i);\n        i += MAX_BITS;\n      }\n\n      if (remainder) {\n        const startIndex = len - MAX_BITS;\n        addChunk(this.pattern.substr(startIndex), startIndex);\n      }\n    } else {\n      addChunk(this.pattern, 0);\n    }\n  }\n\n  searchIn(text) {\n    const { isCaseSensitive, includeMatches } = this.options;\n\n    if (!isCaseSensitive) {\n      text = text.toLowerCase();\n    }\n\n    // Exact match\n    if (this.pattern === text) {\n      let result = {\n        isMatch: true,\n        score: 0\n      };\n\n      if (includeMatches) {\n        result.indices = [[0, text.length - 1]];\n      }\n\n      return result\n    }\n\n    // Otherwise, use Bitap algorithm\n    const {\n      location,\n      distance,\n      threshold,\n      findAllMatches,\n      minMatchCharLength,\n      ignoreLocation\n    } = this.options;\n\n    let allIndices = [];\n    let totalScore = 0;\n    let hasMatches = false;\n\n    this.chunks.forEach(({ pattern, alphabet, startIndex }) => {\n      const { isMatch, score, indices } = search(text, pattern, alphabet, {\n        location: location + startIndex,\n        distance,\n        threshold,\n        findAllMatches,\n        minMatchCharLength,\n        includeMatches,\n        ignoreLocation\n      });\n\n      if (isMatch) {\n        hasMatches = true;\n      }\n\n      totalScore += score;\n\n      if (isMatch && indices) {\n        allIndices = [...allIndices, ...indices];\n      }\n    });\n\n    let result = {\n      isMatch: hasMatches,\n      score: hasMatches ? totalScore / this.chunks.length : 1\n    };\n\n    if (hasMatches && includeMatches) {\n      result.indices = allIndices;\n    }\n\n    return result\n  }\n}\n\nclass BaseMatch {\n  constructor(pattern) {\n    this.pattern = pattern;\n  }\n  static isMultiMatch(pattern) {\n    return getMatch(pattern, this.multiRegex)\n  }\n  static isSingleMatch(pattern) {\n    return getMatch(pattern, this.singleRegex)\n  }\n  search(/*text*/) {}\n}\n\nfunction getMatch(pattern, exp) {\n  const matches = pattern.match(exp);\n  return matches ? matches[1] : null\n}\n\n// Token: 'file\n\nclass ExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'exact'\n  }\n  static get multiRegex() {\n    return /^=\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^=(.*)$/\n  }\n  search(text) {\n    const isMatch = text === this.pattern;\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [0, this.pattern.length - 1]\n    }\n  }\n}\n\n// Token: !fire\n\nclass InverseExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'inverse-exact'\n  }\n  static get multiRegex() {\n    return /^!\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^!(.*)$/\n  }\n  search(text) {\n    const index = text.indexOf(this.pattern);\n    const isMatch = index === -1;\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [0, text.length - 1]\n    }\n  }\n}\n\n// Token: ^file\n\nclass PrefixExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'prefix-exact'\n  }\n  static get multiRegex() {\n    return /^\\^\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^\\^(.*)$/\n  }\n  search(text) {\n    const isMatch = text.startsWith(this.pattern);\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [0, this.pattern.length - 1]\n    }\n  }\n}\n\n// Token: !^fire\n\nclass InversePrefixExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'inverse-prefix-exact'\n  }\n  static get multiRegex() {\n    return /^!\\^\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^!\\^(.*)$/\n  }\n  search(text) {\n    const isMatch = !text.startsWith(this.pattern);\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [0, text.length - 1]\n    }\n  }\n}\n\n// Token: .file$\n\nclass SuffixExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'suffix-exact'\n  }\n  static get multiRegex() {\n    return /^\"(.*)\"\\$$/\n  }\n  static get singleRegex() {\n    return /^(.*)\\$$/\n  }\n  search(text) {\n    const isMatch = text.endsWith(this.pattern);\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [text.length - this.pattern.length, text.length - 1]\n    }\n  }\n}\n\n// Token: !.file$\n\nclass InverseSuffixExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'inverse-suffix-exact'\n  }\n  static get multiRegex() {\n    return /^!\"(.*)\"\\$$/\n  }\n  static get singleRegex() {\n    return /^!(.*)\\$$/\n  }\n  search(text) {\n    const isMatch = !text.endsWith(this.pattern);\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [0, text.length - 1]\n    }\n  }\n}\n\nclass FuzzyMatch extends BaseMatch {\n  constructor(\n    pattern,\n    {\n      location = Config.location,\n      threshold = Config.threshold,\n      distance = Config.distance,\n      includeMatches = Config.includeMatches,\n      findAllMatches = Config.findAllMatches,\n      minMatchCharLength = Config.minMatchCharLength,\n      isCaseSensitive = Config.isCaseSensitive,\n      ignoreLocation = Config.ignoreLocation\n    } = {}\n  ) {\n    super(pattern);\n    this._bitapSearch = new BitapSearch(pattern, {\n      location,\n      threshold,\n      distance,\n      includeMatches,\n      findAllMatches,\n      minMatchCharLength,\n      isCaseSensitive,\n      ignoreLocation\n    });\n  }\n  static get type() {\n    return 'fuzzy'\n  }\n  static get multiRegex() {\n    return /^\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^(.*)$/\n  }\n  search(text) {\n    return this._bitapSearch.searchIn(text)\n  }\n}\n\n// Token: 'file\n\nclass IncludeMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'include'\n  }\n  static get multiRegex() {\n    return /^'\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^'(.*)$/\n  }\n  search(text) {\n    let location = 0;\n    let index;\n\n    const indices = [];\n    const patternLen = this.pattern.length;\n\n    // Get all exact matches\n    while ((index = text.indexOf(this.pattern, location)) > -1) {\n      location = index + patternLen;\n      indices.push([index, location - 1]);\n    }\n\n    const isMatch = !!indices.length;\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices\n    }\n  }\n}\n\n// ❗Order is important. DO NOT CHANGE.\nconst searchers = [\n  ExactMatch,\n  IncludeMatch,\n  PrefixExactMatch,\n  InversePrefixExactMatch,\n  InverseSuffixExactMatch,\n  SuffixExactMatch,\n  InverseExactMatch,\n  FuzzyMatch\n];\n\nconst searchersLen = searchers.length;\n\n// Regex to split by spaces, but keep anything in quotes together\nconst SPACE_RE = / +(?=([^\\\"]*\\\"[^\\\"]*\\\")*[^\\\"]*$)/;\nconst OR_TOKEN = '|';\n\n// Return a 2D array representation of the query, for simpler parsing.\n// Example:\n// \"^core go$ | rb$ | py$ xy$\" => [[\"^core\", \"go$\"], [\"rb$\"], [\"py$\", \"xy$\"]]\nfunction parseQuery(pattern, options = {}) {\n  return pattern.split(OR_TOKEN).map((item) => {\n    let query = item\n      .trim()\n      .split(SPACE_RE)\n      .filter((item) => item && !!item.trim());\n\n    let results = [];\n    for (let i = 0, len = query.length; i < len; i += 1) {\n      const queryItem = query[i];\n\n      // 1. Handle multiple query match (i.e, once that are quoted, like `\"hello world\"`)\n      let found = false;\n      let idx = -1;\n      while (!found && ++idx < searchersLen) {\n        const searcher = searchers[idx];\n        let token = searcher.isMultiMatch(queryItem);\n        if (token) {\n          results.push(new searcher(token, options));\n          found = true;\n        }\n      }\n\n      if (found) {\n        continue\n      }\n\n      // 2. Handle single query matches (i.e, once that are *not* quoted)\n      idx = -1;\n      while (++idx < searchersLen) {\n        const searcher = searchers[idx];\n        let token = searcher.isSingleMatch(queryItem);\n        if (token) {\n          results.push(new searcher(token, options));\n          break\n        }\n      }\n    }\n\n    return results\n  })\n}\n\n// These extended matchers can return an array of matches, as opposed\n// to a singl match\nconst MultiMatchSet = new Set([FuzzyMatch.type, IncludeMatch.type]);\n\n/**\n * Command-like searching\n * ======================\n *\n * Given multiple search terms delimited by spaces.e.g. `^jscript .python$ ruby !java`,\n * search in a given text.\n *\n * Search syntax:\n *\n * | Token       | Match type                 | Description                            |\n * | ----------- | -------------------------- | -------------------------------------- |\n * | `jscript`   | fuzzy-match                | Items that fuzzy match `jscript`       |\n * | `=scheme`   | exact-match                | Items that are `scheme`                |\n * | `'python`   | include-match              | Items that include `python`            |\n * | `!ruby`     | inverse-exact-match        | Items that do not include `ruby`       |\n * | `^java`     | prefix-exact-match         | Items that start with `java`           |\n * | `!^earlang` | inverse-prefix-exact-match | Items that do not start with `earlang` |\n * | `.js$`      | suffix-exact-match         | Items that end with `.js`              |\n * | `!.go$`     | inverse-suffix-exact-match | Items that do not end with `.go`       |\n *\n * A single pipe character acts as an OR operator. For example, the following\n * query matches entries that start with `core` and end with either`go`, `rb`,\n * or`py`.\n *\n * ```\n * ^core go$ | rb$ | py$\n * ```\n */\nclass ExtendedSearch {\n  constructor(\n    pattern,\n    {\n      isCaseSensitive = Config.isCaseSensitive,\n      includeMatches = Config.includeMatches,\n      minMatchCharLength = Config.minMatchCharLength,\n      ignoreLocation = Config.ignoreLocation,\n      findAllMatches = Config.findAllMatches,\n      location = Config.location,\n      threshold = Config.threshold,\n      distance = Config.distance\n    } = {}\n  ) {\n    this.query = null;\n    this.options = {\n      isCaseSensitive,\n      includeMatches,\n      minMatchCharLength,\n      findAllMatches,\n      ignoreLocation,\n      location,\n      threshold,\n      distance\n    };\n\n    this.pattern = isCaseSensitive ? pattern : pattern.toLowerCase();\n    this.query = parseQuery(this.pattern, this.options);\n  }\n\n  static condition(_, options) {\n    return options.useExtendedSearch\n  }\n\n  searchIn(text) {\n    const query = this.query;\n\n    if (!query) {\n      return {\n        isMatch: false,\n        score: 1\n      }\n    }\n\n    const { includeMatches, isCaseSensitive } = this.options;\n\n    text = isCaseSensitive ? text : text.toLowerCase();\n\n    let numMatches = 0;\n    let allIndices = [];\n    let totalScore = 0;\n\n    // ORs\n    for (let i = 0, qLen = query.length; i < qLen; i += 1) {\n      const searchers = query[i];\n\n      // Reset indices\n      allIndices.length = 0;\n      numMatches = 0;\n\n      // ANDs\n      for (let j = 0, pLen = searchers.length; j < pLen; j += 1) {\n        const searcher = searchers[j];\n        const { isMatch, indices, score } = searcher.search(text);\n\n        if (isMatch) {\n          numMatches += 1;\n          totalScore += score;\n          if (includeMatches) {\n            const type = searcher.constructor.type;\n            if (MultiMatchSet.has(type)) {\n              allIndices = [...allIndices, ...indices];\n            } else {\n              allIndices.push(indices);\n            }\n          }\n        } else {\n          totalScore = 0;\n          numMatches = 0;\n          allIndices.length = 0;\n          break\n        }\n      }\n\n      // OR condition, so if TRUE, return\n      if (numMatches) {\n        let result = {\n          isMatch: true,\n          score: totalScore / numMatches\n        };\n\n        if (includeMatches) {\n          result.indices = allIndices;\n        }\n\n        return result\n      }\n    }\n\n    // Nothing was matched\n    return {\n      isMatch: false,\n      score: 1\n    }\n  }\n}\n\nconst registeredSearchers = [];\n\nfunction register(...args) {\n  registeredSearchers.push(...args);\n}\n\nfunction createSearcher(pattern, options) {\n  for (let i = 0, len = registeredSearchers.length; i < len; i += 1) {\n    let searcherClass = registeredSearchers[i];\n    if (searcherClass.condition(pattern, options)) {\n      return new searcherClass(pattern, options)\n    }\n  }\n\n  return new BitapSearch(pattern, options)\n}\n\nconst LogicalOperator = {\n  AND: '$and',\n  OR: '$or'\n};\n\nconst KeyType = {\n  PATH: '$path',\n  PATTERN: '$val'\n};\n\nconst isExpression = (query) =>\n  !!(query[LogicalOperator.AND] || query[LogicalOperator.OR]);\n\nconst isPath = (query) => !!query[KeyType.PATH];\n\nconst isLeaf = (query) =>\n  !isArray(query) && isObject(query) && !isExpression(query);\n\nconst convertToExplicit = (query) => ({\n  [LogicalOperator.AND]: Object.keys(query).map((key) => ({\n    [key]: query[key]\n  }))\n});\n\n// When `auto` is `true`, the parse function will infer and initialize and add\n// the appropriate `Searcher` instance\nfunction parse(query, options, { auto = true } = {}) {\n  const next = (query) => {\n    let keys = Object.keys(query);\n\n    const isQueryPath = isPath(query);\n\n    if (!isQueryPath && keys.length > 1 && !isExpression(query)) {\n      return next(convertToExplicit(query))\n    }\n\n    if (isLeaf(query)) {\n      const key = isQueryPath ? query[KeyType.PATH] : keys[0];\n\n      const pattern = isQueryPath ? query[KeyType.PATTERN] : query[key];\n\n      if (!isString(pattern)) {\n        throw new Error(LOGICAL_SEARCH_INVALID_QUERY_FOR_KEY(key))\n      }\n\n      const obj = {\n        keyId: createKeyId(key),\n        pattern\n      };\n\n      if (auto) {\n        obj.searcher = createSearcher(pattern, options);\n      }\n\n      return obj\n    }\n\n    let node = {\n      children: [],\n      operator: keys[0]\n    };\n\n    keys.forEach((key) => {\n      const value = query[key];\n\n      if (isArray(value)) {\n        value.forEach((item) => {\n          node.children.push(next(item));\n        });\n      }\n    });\n\n    return node\n  };\n\n  if (!isExpression(query)) {\n    query = convertToExplicit(query);\n  }\n\n  return next(query)\n}\n\n// Practical scoring function\nfunction computeScore$1(\n  results,\n  { ignoreFieldNorm = Config.ignoreFieldNorm }\n) {\n  results.forEach((result) => {\n    let totalScore = 1;\n\n    result.matches.forEach(({ key, norm, score }) => {\n      const weight = key ? key.weight : null;\n\n      totalScore *= Math.pow(\n        score === 0 && weight ? Number.EPSILON : score,\n        (weight || 1) * (ignoreFieldNorm ? 1 : norm)\n      );\n    });\n\n    result.score = totalScore;\n  });\n}\n\nfunction transformMatches(result, data) {\n  const matches = result.matches;\n  data.matches = [];\n\n  if (!isDefined(matches)) {\n    return\n  }\n\n  matches.forEach((match) => {\n    if (!isDefined(match.indices) || !match.indices.length) {\n      return\n    }\n\n    const { indices, value } = match;\n\n    let obj = {\n      indices,\n      value\n    };\n\n    if (match.key) {\n      obj.key = match.key.src;\n    }\n\n    if (match.idx > -1) {\n      obj.refIndex = match.idx;\n    }\n\n    data.matches.push(obj);\n  });\n}\n\nfunction transformScore(result, data) {\n  data.score = result.score;\n}\n\nfunction format(\n  results,\n  docs,\n  {\n    includeMatches = Config.includeMatches,\n    includeScore = Config.includeScore\n  } = {}\n) {\n  const transformers = [];\n\n  if (includeMatches) transformers.push(transformMatches);\n  if (includeScore) transformers.push(transformScore);\n\n  return results.map((result) => {\n    const { idx } = result;\n\n    const data = {\n      item: docs[idx],\n      refIndex: idx\n    };\n\n    if (transformers.length) {\n      transformers.forEach((transformer) => {\n        transformer(result, data);\n      });\n    }\n\n    return data\n  })\n}\n\nclass Fuse {\n  constructor(docs, options = {}, index) {\n    this.options = { ...Config, ...options };\n\n    if (\n      this.options.useExtendedSearch &&\n      !true\n    ) {\n      throw new Error(EXTENDED_SEARCH_UNAVAILABLE)\n    }\n\n    this._keyStore = new KeyStore(this.options.keys);\n\n    this.setCollection(docs, index);\n  }\n\n  setCollection(docs, index) {\n    this._docs = docs;\n\n    if (index && !(index instanceof FuseIndex)) {\n      throw new Error(INCORRECT_INDEX_TYPE)\n    }\n\n    this._myIndex =\n      index ||\n      createIndex(this.options.keys, this._docs, {\n        getFn: this.options.getFn\n      });\n  }\n\n  add(doc) {\n    if (!isDefined(doc)) {\n      return\n    }\n\n    this._docs.push(doc);\n    this._myIndex.add(doc);\n  }\n\n  remove(predicate = (/* doc, idx */) => false) {\n    const results = [];\n\n    for (let i = 0, len = this._docs.length; i < len; i += 1) {\n      const doc = this._docs[i];\n      if (predicate(doc, i)) {\n        this.removeAt(i);\n        i -= 1;\n        len -= 1;\n\n        results.push(doc);\n      }\n    }\n\n    return results\n  }\n\n  removeAt(idx) {\n    this._docs.splice(idx, 1);\n    this._myIndex.removeAt(idx);\n  }\n\n  getIndex() {\n    return this._myIndex\n  }\n\n  search(query, { limit = -1 } = {}) {\n    const {\n      includeMatches,\n      includeScore,\n      shouldSort,\n      sortFn,\n      ignoreFieldNorm\n    } = this.options;\n\n    let results = isString(query)\n      ? isString(this._docs[0])\n        ? this._searchStringList(query)\n        : this._searchObjectList(query)\n      : this._searchLogical(query);\n\n    computeScore$1(results, { ignoreFieldNorm });\n\n    if (shouldSort) {\n      results.sort(sortFn);\n    }\n\n    if (isNumber(limit) && limit > -1) {\n      results = results.slice(0, limit);\n    }\n\n    return format(results, this._docs, {\n      includeMatches,\n      includeScore\n    })\n  }\n\n  _searchStringList(query) {\n    const searcher = createSearcher(query, this.options);\n    const { records } = this._myIndex;\n    const results = [];\n\n    // Iterate over every string in the index\n    records.forEach(({ v: text, i: idx, n: norm }) => {\n      if (!isDefined(text)) {\n        return\n      }\n\n      const { isMatch, score, indices } = searcher.searchIn(text);\n\n      if (isMatch) {\n        results.push({\n          item: text,\n          idx,\n          matches: [{ score, value: text, norm, indices }]\n        });\n      }\n    });\n\n    return results\n  }\n\n  _searchLogical(query) {\n\n    const expression = parse(query, this.options);\n\n    const evaluate = (node, item, idx) => {\n      if (!node.children) {\n        const { keyId, searcher } = node;\n\n        const matches = this._findMatches({\n          key: this._keyStore.get(keyId),\n          value: this._myIndex.getValueForItemAtKeyId(item, keyId),\n          searcher\n        });\n\n        if (matches && matches.length) {\n          return [\n            {\n              idx,\n              item,\n              matches\n            }\n          ]\n        }\n\n        return []\n      }\n\n      /*eslint indent: [2, 2, {\"SwitchCase\": 1}]*/\n      switch (node.operator) {\n        case LogicalOperator.AND: {\n          const res = [];\n          for (let i = 0, len = node.children.length; i < len; i += 1) {\n            const child = node.children[i];\n            const result = evaluate(child, item, idx);\n            if (result.length) {\n              res.push(...result);\n            } else {\n              return []\n            }\n          }\n          return res\n        }\n        case LogicalOperator.OR: {\n          const res = [];\n          for (let i = 0, len = node.children.length; i < len; i += 1) {\n            const child = node.children[i];\n            const result = evaluate(child, item, idx);\n            if (result.length) {\n              res.push(...result);\n              break\n            }\n          }\n          return res\n        }\n      }\n    };\n\n    const records = this._myIndex.records;\n    const resultMap = {};\n    const results = [];\n\n    records.forEach(({ $: item, i: idx }) => {\n      if (isDefined(item)) {\n        let expResults = evaluate(expression, item, idx);\n\n        if (expResults.length) {\n          // Dedupe when adding\n          if (!resultMap[idx]) {\n            resultMap[idx] = { idx, item, matches: [] };\n            results.push(resultMap[idx]);\n          }\n          expResults.forEach(({ matches }) => {\n            resultMap[idx].matches.push(...matches);\n          });\n        }\n      }\n    });\n\n    return results\n  }\n\n  _searchObjectList(query) {\n    const searcher = createSearcher(query, this.options);\n    const { keys, records } = this._myIndex;\n    const results = [];\n\n    // List is Array<Object>\n    records.forEach(({ $: item, i: idx }) => {\n      if (!isDefined(item)) {\n        return\n      }\n\n      let matches = [];\n\n      // Iterate over every key (i.e, path), and fetch the value at that key\n      keys.forEach((key, keyIndex) => {\n        matches.push(\n          ...this._findMatches({\n            key,\n            value: item[keyIndex],\n            searcher\n          })\n        );\n      });\n\n      if (matches.length) {\n        results.push({\n          idx,\n          item,\n          matches\n        });\n      }\n    });\n\n    return results\n  }\n  _findMatches({ key, value, searcher }) {\n    if (!isDefined(value)) {\n      return []\n    }\n\n    let matches = [];\n\n    if (isArray(value)) {\n      value.forEach(({ v: text, i: idx, n: norm }) => {\n        if (!isDefined(text)) {\n          return\n        }\n\n        const { isMatch, score, indices } = searcher.searchIn(text);\n\n        if (isMatch) {\n          matches.push({\n            score,\n            key,\n            value: text,\n            idx,\n            norm,\n            indices\n          });\n        }\n      });\n    } else {\n      const { v: text, n: norm } = value;\n\n      const { isMatch, score, indices } = searcher.searchIn(text);\n\n      if (isMatch) {\n        matches.push({ score, key, value: text, norm, indices });\n      }\n    }\n\n    return matches\n  }\n}\n\nFuse.version = '6.4.6';\nFuse.createIndex = createIndex;\nFuse.parseIndex = parseIndex;\nFuse.config = Config;\n\n{\n  Fuse.parseQuery = parse;\n}\n\n{\n  register(ExtendedSearch);\n}\n\nexport default Fuse;\n","<script lang=\"ts\">\n  import { data, mapType, singularName } from './data'\n  import Fuse from 'fuse.js'\n  \n  let fuse: Fuse<any>\n  $: fuse = new Fuse([...$data?.all() ?? []].filter(x => typeof x.id === 'string'), {\n    keys: ['id', 'name'],\n    getFn: (obj: any, path: string | string[]): string | string[] => {\n      if (path[0] === 'id')\n        return obj.id ?? obj.abstract ?? ''\n      if (path[0] === 'name')\n        return singularName(obj)\n    },\n    ignoreFieldNorm: true,\n    minMatchCharLength: 2,\n    threshold: 0.2\n  })\n\n  export let search: string\n  \n  const SEARCHABLE_TYPES = new Set([\n    'item',\n    'monster'\n  ])\n  \n  function filter(text: string): Map<string, any[]> {\n    const results = fuse.search(text, { limit: 100 })\n    const byType = new Map<string, any[]>()\n    for (const {item} of results) {\n      const mappedType = mapType(item.type)\n      if (!SEARCHABLE_TYPES.has(mappedType)) continue;\n      if (!byType.has(mappedType)) byType.set(mappedType, [])\n      byType.get(mappedType).push(item)\n    }\n    return byType\n  }\n  \n  $: matchingObjects = search && search.length > 1 && $data && filter(search)\n  \n  $: history.replaceState({ search }, '')\n</script>\n\n{#if matchingObjects}\n  {#each [...matchingObjects.keys()] as type}\n  <h1>{type}</h1>\n  <ul>\n    {#each matchingObjects.get(type) as obj}\n    <li><a href=\"#/{mapType(obj.type)}/{obj.id}\">{singularName(obj)}</a></li>\n    {/each}\n  </ul>\n  {/each}\n{:else}\n  <pre>...</pre>\n{/if}\n","<script lang=\"ts\">\n  import { onMount } from \"svelte\";\n\timport Object from \"./Object.svelte\";\n  import SearchResults from \"./SearchResults.svelte\";\n  \n  let item: { type: string, id: string } | null = null\n  \n  function hashchange() {\n    // the poor man's router!\n    const path = window.location.hash.slice(1);\n\n    let m: RegExpExecArray | null;\n    if (m = /^\\/([^\\/]+)\\/(.+)$/.exec(path)) {\n      const [, type, id] = m\n      item = { type, id }\n\n      window.scrollTo(0,0);\n    } else {\n      item = null\n    }\n  }\n\n  onMount(hashchange)\n  let search: string = ''\n  \n  const clearItem = () => {\n    if (item) history.pushState(null, '', location.href.replace(/#.*$/, ''))\n    item = null;\n  }\n</script>\n<svelte:window on:hashchange={hashchange}/>\n\n<header>\n  <nav>\n    <div>\n      <strong>Hitchhiker's Guide to the Cataclysm</strong>\n    </div>\n    <div style=\"flex: 0.8\">\n      <input style=\"margin: 0; width: 100%\" placeholder=\"Search...\" bind:value={search} on:input={clearItem} />\n    </div>\n  </nav>\n</header>\n<main>\n{#if item}\n{#key item}\n<Object {item} />\n{/key}\n{:else if search}\n<SearchResults search={search} />\n{:else}\nDON'T PANIC\n{/if}\n</main>\n\n<style>\n  main {\n    text-align: left;\n    padding: 1em;\n    max-width: 980px;\n    margin: 0 auto;\n    margin-top: 4rem;\n  }\n  header {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 4rem;\n    background: rgba(33, 33, 33, 0.98);\n  }\n  \n  nav {\n    max-width: 980px;\n    margin: 0 auto;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    height: 100%;\n  }\n</style>\n","import App from './App.svelte';\nif ('serviceWorker' in navigator) {\n    navigator.serviceWorker.register('service-worker.js').catch((err) => {\n        console.log('ServiceWorker registration failed: ', err);\n    });\n    navigator.serviceWorker.ready.then(start);\n}\nfunction start() {\n    const app = new App({\n        target: document.body,\n    });\n}\n//export default app;\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","component_subscribe","component","store","callback","$$","on_destroy","push","callbacks","unsub","subscribe","unsubscribe","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","wholeText","set_input_value","input","set_style","key","important","style","setProperty","current_component","set_current_component","onMount","Error","get_current_component","on_mount","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flushing","seen_callbacks","Set","flush","update","pop","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","globals","window","globalThis","global","outro_and_destroy_block","lookup","create_component","mount_component","customElement","m","new_on_destroy","map","filter","destroy_component","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","parent_component","bound","on_disconnect","context","Map","skip_bound","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","[object Object]","this","$destroy","type","index","indexOf","splice","$$props","obj","$$set","keys","subscriber_queue","writable","start","stop","subscribers","set","new_value","run_queue","s","invalidate","subscriber","typeMappings","mapType","_a","get","singularName","_b","str_sp","str","id","abstract","pluralName","_c","str_pl","CddaData","raw","_byType","_byTypeById","_abstractsByType","_toolReplacements","_craftingPseudoItems","_raw","hasOwnProperty","call","mappedType","sub","crafting_pseudo_item","_flatten","_d","_e","_f","parent","console","error","assign","k","relative","proportional","json","promise","async","res","fetch","ok","status","statusText","fetchJson","readable","special_attacks","specialAttackToString","anger_triggers","join","placate_triggers","flags","symbol","description","difficulty","difficultyDescription","bodytype","species","volume","weight","speed","melee_skill","damage","hp","dodge","armor_bash","armor_cut","armor_stab","Math","floor","armor_bullet","armor_acid","armor_fire","aggression","morale","default_faction","death_function","color","difficultyColor","proficiencies","byId","proficiency","amount","level","craftingPseudoItem","count","skill_used","time","charges","initial_charges","JSON","stringify","bashing","cutting","to_hit","attackTime","old_blocks","get_key","dynamic","list","destroy","create_each_block","next","get_context","n","old_indexes","new_blocks","new_lookup","deltas","child_ctx","abs","will_move","did_move","first","new_block","old_block","new_key","old_key","item","Unknown","isArray","getTag","isString","isNumber","isBoolean","isObject","isObjectLike","isDefined","isBlank","trim","undefined","prototype","toString","hasOwn","KeyStore","_keys","_keyMap","totalWeight","createKey","keyId","path","src","createKeyPath","createKeyId","MISSING_KEY_PROPERTY","INVALID_KEY_WEIGHT_VALUE","split","Config","isCaseSensitive","includeScore","shouldSort","sortFn","score","idx","includeMatches","findAllMatches","minMatchCharLength","location","threshold","distance","useExtendedSearch","getFn","arr","deepGet","result","baseToString","len","ignoreLocation","ignoreFieldNorm","SPACE","FuseIndex","norm","mantissa","cache","pow","numTokens","match","sqrt","parseFloat","round","isCreated","setIndexRecords","docs","records","_keysMap","doc","docIndex","_addString","_addObject","size","record","v","$","keyIndex","subRecords","stack","nestedArrIndex","subRecord","createIndex","myIndex","setKeys","setSources","computeScore","pattern","errors","currentLocation","expectedLocation","accuracy","proximity","MAX_BITS","search","patternAlphabet","patternLen","textLen","max","min","currentThreshold","bestLocation","computeMatches","matchMask","lastBitArr","finalScore","binMax","mask","binMin","binMid","finish","bitArr","j","charMatch","charAt","isMatch","indices","matchmask","end","convertMaskToIndices","createPatternAlphabet","char","BitapSearch","toLowerCase","chunks","addChunk","startIndex","alphabet","remainder","substr","allIndices","totalScore","hasMatches","BaseMatch","getMatch","multiRegex","singleRegex","exp","matches","FuzzyMatch","super","_bitapSearch","searchIn","IncludeMatch","searchers","startsWith","endsWith","searchersLen","SPACE_RE","MultiMatchSet","ExtendedSearch","query","results","queryItem","found","searcher","token","isMultiMatch","isSingleMatch","parseQuery","_","numMatches","qLen","pLen","constructor","registeredSearchers","createSearcher","searcherClass","condition","LogicalOperator","KeyType","isExpression","convertToExplicit","parse","auto","isQueryPath","isPath","isLeaf","LOGICAL_SEARCH_INVALID_QUERY_FOR_KEY","operator","transformMatches","refIndex","transformScore","Fuse","_keyStore","setCollection","_docs","_myIndex","predicate","removeAt","limit","_searchStringList","_searchObjectList","_searchLogical","Number","EPSILON","computeScore$1","sort","slice","transformers","transformer","format","expression","evaluate","_findMatches","getValueForItemAtKeyId","child","resultMap","expResults","version","parseIndex","config","args","register","navigator","serviceWorker","catch","err","log","App","body"],"mappings":"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"}